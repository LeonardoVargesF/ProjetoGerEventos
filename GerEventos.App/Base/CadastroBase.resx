<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACAkAAAJNU0Z0AUkBTAIBAQIB
        AAFIAQABSAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMAARgDAAEBAQABIAYAASQa
        AANDAXcDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cB
        uQNPAZkYAAMFAQYDAAH/AwAB/wMAAf8DHAEn/wARAANLAeoDUAGfAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDOgFhAwAB/xQAA1wB1QMJAf4EAANaAdcD
        AAH/AxwBJ/8AEAAB/ycAAf8DTwHrAzsBYxAAA1kBwAMdASkQAANTAeQDLgH3CAADWgHXAwAB/wMdASj/
        AAwAAf8kAANZAeADHAEnA00BkwMAAf8DLQH2CAADVQGvAyQBNBAAAxIBGAMAAf8DWwHWCAADWgHXAwAB
        /wMcASf/AAgAAf8kAAM0AVMDUQGkAzkBXgMdAfoDQAFxAy4B9wQAA1UBrwMkATQUAAMdASgDAAH/A1sB
        1ggAA1oB1wMAAf8DHAEn/wAEAAH/KwAB/wMdAfoIAANAAXEDLQH2A1UBrwMkATQYAAMdASgDAAH/A1sB
        1ggAA1oB1wMAAf8DHQEo/wAB/wcAAf8DAAH/AwAB/wNOAZgDCwEOAz8BbgM/AW4DPwFuBAADRwHuA0oB
        iQwAA0ABcQMAAf8DJAE0HAADHQEoAwAB/wNbAdYIAANaAdcDAAH/AxwBJ/sAAf8EAAM6AfMEAAMqAUAD
        UQGhAwwBEANDAXYDQwF2A0MBdggAA0cB7gNKAYkMAANAAXEDLQH2IAADHQEoAwAB/wNaAdcIAANaAdcD
        AAH/AxwBJwQABAEDPgFqA1UBrQNVAa8DQwF2AwYBB9sAAf8EAAM6AfMEAAMqAUADUQGhAxkBIgNTAaYD
        UwGmA1MBpgNTAaYDPwFsBAADRwHuA0oBiQwAA0ABcQMtAfYgAAMdASgDAAH/A1oB1wgAA1oB1wMAAf8D
        JgH4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwkB/gMbASXTAAH/BwAB/wMAAf8DAAH/A0sBjAMCAQMD
        KQE+AykBPgMpAT4DKQE+AxQBGwgAA0cB7gNKAYkMAANAAXEDLQH2IAADHQEoAwAB/wNbAdYEAAM3AVoD
        AAH/Ax0B+gMYASEQAAMLAQ4DSwHqAwAB/wNOAZTPAAH/OAADRwHuA0oBiQgABAEDAAH/Ay4B9yAAAx0B
        KAMAAf8DWQHdAwAB/wNTAacgAAM+AWsDAAH/A0QBeMsAAf8EAANBAfEDQQHxA0EB8QM9AWkoAANHAe4D
        SgGJBAEDAAH/Ax8BLANOAZYDRQF8IAADHQEoAwAB/wNbAc0oAANMAY4DAAH/AwIBA8cAAf8EAAM6AfME
        AAMqAUADUQGhAykBPgNVAeUDVQHlA1UB5QMEAQUYAANCAe8DAAH/Ax8BLAQAAykBPgNVAawgAANJAYYD
        AAH/MwAB/wNbAcvHAAH/BAADOgHzBAADKgFAA1EBoQQBAyYBOAMmATgDJgE4AyYBOAMRARYUAANVAa8D
        EgH8A1UBrAMzAVADAAH/AwsBDiMAAf8DWQHBMAADRAF7AwAB/8cAAf8HAAH/AwAB/wMAAf8DUgGgAxsB
        JQNVAawDVQGsA1UBrANVAawDQQFyFAADVQGvAyUBNgM9AWkDUgGgAwoBDScAAf8DLgFIMAADBQEGAwAB
        /8cAAf9AAANVAa8DJQE2MwAB/wMVAR03AAH/xwAB/wQAA0kBhgNJAYYDSQGGAx0BKCwAA1UBrwMlATYz
        AAH/AykBPjAABAEDAAH/xwAB/wQAAy4B9wM5AV4DSQGGA1EBoQM9AWgDAAH/AwAB/wMAAf8DCQEMDAAD
        RgGBA1IBowNSAaMDVgHiAyUBNjMAAf8DVAGrMAADOwFlAwAB/8cAAf8EAAM6AfMEAAMqAUADUQGhHwAB
        /wNFAXwDKgFAA0sBjAMJAf40AANRAaIDAAH/CAADWQHBA1YB4xAAA1ABnQMJAf4IAAMJAf4DUwHkxwAB
        /wQAAxIB/QNaAdcDWQHhA1EBoQM2AVcDAAH/AwAB/wMAAf8DAAH/A1sB0AMVAR0DWwHQBAADMAFMAwkB
        /j8AAf8DUgGgBAADFAEbAwAB/wMAAf8DPQHyA1MB5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8DDAEPxwAB
        /wQAAwsBDgMLAQ4DCwEOHAADHgEqA1kBuwMwAUwDCQH+QAADPQFpAwAB/wM7AWMIAANCAXQDVAHmA0EB
        8QNOAZcEAQQAAyMBMgMAAf8DVQGtywAB/ywAAx4BKgNTAecDCQH+SAADTwGbAwAB/wNaAdcEARQAA1YB
        swMAAf8DWwHNzAADJgE4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AxIB/VAAAyYBOAMAAf8DAAH/AwAB/wNZAeEDWQHdAwAB/wMAAf8DAAH/AzoBYv8AYQADHgEqA1UB
        rwNBAfEDNQH0A1cBvAMqAUDUAAFCAU0BPgcAAT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8B
        AAHAAQABPwEHAv8GAAGAAQABHwEjAv8GAAG/AeMBzwExAv8GAAG/AeABzwEYAv8GAAG/AeABTwGMAX8B
        /wYAAb8B8wEPAcYBPwH/BgABoAETAY8B4wEfAf8GAAGoARkBzwHxAYgBHwYAAagBBAHnAfgBwAEHBgAB
        oAEGAXMB/AFDAcMGAAG/Af8BMQH+AQ8B8QYAAaEB/wGAAf8BHwH4BgABqAEPAcQB/wE/AfwGAAGoAQcB
        wAH/AT8B/AYAAaABBwHBAf8BPwH8BgABvwH/Ac8B/wE/Af4GAAGhAf8BzwH/AT8B/AYAAaABDgEPAf8B
        PwH8BgABqQH8AR8B/wEzAcwGAAGgAQEBPwH/AZABCAYAAaMB+AF/Af8BjAERBgABvwH4Av8BwwHjBgAB
        gAEBAv8B4AEHBgAE/wH4AR8GAAs=
</value>
  </data>
</root>